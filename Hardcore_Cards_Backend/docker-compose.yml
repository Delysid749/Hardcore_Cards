version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:5.7
    container_name: fic-mysql
    restart: always
    platform: linux/amd64
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: HardcoreDashBoard
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_general_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d:ro
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-time-zone='+8:00'
      --lower-case-table-names=1
    networks:
      - fic-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot123"]
      timeout: 20s
      retries: 10

  # Redis缓存服务
  redis:
    image: redis:6.2-alpine
    container_name: fic-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - fic-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      timeout: 20s
      retries: 5

  # Elasticsearch搜索引擎
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: fic-elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.watcher.enabled=false
      - "indices.id_field_data.enabled=true"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - fic-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      timeout: 30s
      retries: 5

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: fic-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - fic-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      timeout: 30s
      retries: 5

  # Nacos服务注册中心和配置中心
  nacos:
    image: nacos/nacos-server:v2.0.4-slim
    container_name: fic-nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      MODE: standalone
      NACOS_AUTH_ENABLE: "false"
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_DB_NAME: nacos_config
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root123
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
    volumes:
      - nacos_logs:/home/nacos/logs
      - nacos_data:/home/nacos/data
    networks:
      - fic-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8848/nacos/v1/console/health/readiness || exit 1"]
      timeout: 30s
      retries: 5

networks:
  fic-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  es_data:
  rabbitmq_data:
  nacos_logs:
  nacos_data: 